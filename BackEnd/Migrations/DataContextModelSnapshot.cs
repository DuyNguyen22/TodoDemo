// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Helpers;

namespace WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BackgroundColor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BackgroundColor = "#DDEBF7",
                            Description = "National information",
                            Title = "National"
                        },
                        new
                        {
                            Id = 2,
                            BackgroundColor = "#FEF6F6",
                            Description = "Fashion information",
                            Title = "Fashion"
                        },
                        new
                        {
                            Id = 3,
                            BackgroundColor = "#FAE2E2",
                            Description = "Learning information",
                            Title = "Learning"
                        },
                        new
                        {
                            Id = 4,
                            BackgroundColor = "#FBE6A2",
                            Description = "Hobby information",
                            Title = "Hobby"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 65, DateTimeKind.Local).AddTicks(8779),
                            Description = "Desciption-1",
                            IsCompleted = false,
                            Title = "Title-1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4241),
                            Description = "Desciption-2",
                            IsCompleted = false,
                            Title = "Title-2"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4348),
                            Description = "Desciption-3",
                            IsCompleted = false,
                            Title = "Title-3"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4358),
                            Description = "Desciption-4",
                            IsCompleted = false,
                            Title = "Title-4"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4365),
                            Description = "Desciption-5",
                            IsCompleted = false,
                            Title = "Title-5"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4390),
                            Description = "Desciption-6",
                            IsCompleted = false,
                            Title = "Title-6"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4505),
                            Description = "Desciption-7",
                            IsCompleted = false,
                            Title = "Title-7"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4514),
                            Description = "Desciption-8",
                            IsCompleted = false,
                            Title = "Title-8"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4520),
                            Description = "Desciption-9",
                            IsCompleted = false,
                            Title = "Title-9"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4527),
                            Description = "Desciption-10",
                            IsCompleted = false,
                            Title = "Title-10"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 4,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4533),
                            Description = "Desciption-11",
                            IsCompleted = false,
                            Title = "Title-11"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4545),
                            Description = "Desciption-12",
                            IsCompleted = false,
                            Title = "Title-12"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4560),
                            Description = "Desciption-13",
                            IsCompleted = false,
                            Title = "Title-13"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4589),
                            Description = "Desciption-14",
                            IsCompleted = false,
                            Title = "Title-14"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 4,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4600),
                            Description = "Desciption-15",
                            IsCompleted = false,
                            Title = "Title-15"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4608),
                            Description = "Desciption-16",
                            IsCompleted = false,
                            Title = "Title-16"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4615),
                            Description = "Desciption-17",
                            IsCompleted = false,
                            Title = "Title-17"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 3,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4622),
                            Description = "Desciption-18",
                            IsCompleted = false,
                            Title = "Title-18"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 4,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4630),
                            Description = "Desciption-19",
                            IsCompleted = false,
                            Title = "Title-19"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 27, 22, 3, 20, 70, DateTimeKind.Local).AddTicks(4638),
                            Description = "Desciption-20",
                            IsCompleted = false,
                            Title = "Title-20"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.TodoTag", b =>
                {
                    b.Property<int>("TodoId")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TodoId", "Tag");

                    b.ToTable("TodoTags");

                    b.HasData(
                        new
                        {
                            TodoId = 1,
                            Tag = "Learning"
                        },
                        new
                        {
                            TodoId = 1,
                            Tag = "Shopping"
                        },
                        new
                        {
                            TodoId = 2,
                            Tag = "Learning"
                        },
                        new
                        {
                            TodoId = 2,
                            Tag = "Shopping"
                        },
                        new
                        {
                            TodoId = 3,
                            Tag = "Shopping"
                        },
                        new
                        {
                            TodoId = 4,
                            Tag = "Shopping"
                        },
                        new
                        {
                            TodoId = 5,
                            Tag = "Shopping"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Admin",
                            IsAdmin = true,
                            IsBlocked = false,
                            LastName = "System",
                            PasswordHash = new byte[] { 12, 152, 240, 131, 105, 153, 36, 175, 11, 40, 88, 101, 27, 54, 114, 89, 211, 53, 161, 151, 121, 29, 170, 163, 84, 146, 225, 62, 100, 86, 35, 29, 106, 72, 136, 243, 144, 206, 230, 86, 125, 190, 3, 82, 200, 4, 150, 18, 170, 8, 97, 72, 193, 42, 86, 211, 45, 101, 140, 255, 94, 86, 145, 99 },
                            PasswordSalt = new byte[] { 99, 91, 125, 171, 254, 247, 145, 24, 44, 51, 57, 119, 227, 91, 42, 0, 113, 127, 64, 54, 90, 172, 172, 230, 74, 9, 240, 77, 89, 52, 89, 194, 149, 80, 212, 74, 86, 64, 34, 94, 186, 64, 195, 135, 35, 75, 62, 104, 245, 88, 41, 98, 41, 223, 104, 6, 234, 103, 206, 162, 255, 34, 49, 71, 145, 89, 1, 243, 67, 207, 49, 116, 71, 33, 204, 192, 192, 48, 98, 217, 16, 206, 231, 92, 57, 107, 246, 152, 204, 72, 178, 34, 197, 118, 51, 254, 149, 20, 48, 109, 222, 209, 218, 116, 237, 181, 203, 35, 120, 222, 206, 151, 119, 132, 233, 35, 116, 20, 218, 131, 59, 94, 4, 79, 62, 158, 68, 131 },
                            Username = "Admin"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Todo", b =>
                {
                    b.HasOne("WebApi.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.User", "User")
                        .WithMany("Todos")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.Entities.TodoTag", b =>
                {
                    b.HasOne("WebApi.Entities.Todo", "Todo")
                        .WithMany("TodoTags")
                        .HasForeignKey("TodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
