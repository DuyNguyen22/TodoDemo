// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Helpers;

namespace WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191025221950_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BackgroundColor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BackgroundColor = "#DDEBF7",
                            Description = "National information",
                            Title = "National"
                        },
                        new
                        {
                            Id = 2,
                            BackgroundColor = "#FEF6F6",
                            Description = "Fashion information",
                            Title = "Fashion"
                        },
                        new
                        {
                            Id = 3,
                            BackgroundColor = "#FAE2E2",
                            Description = "Learning information",
                            Title = "Learning"
                        },
                        new
                        {
                            Id = 4,
                            BackgroundColor = "#FBE6A2",
                            Description = "Hobby information",
                            Title = "Hobby"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "National"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fashion"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Learning"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hobby"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 482, DateTimeKind.Local).AddTicks(520),
                            Description = "Desciption-1",
                            IsCompleted = false,
                            Title = "Title-1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1316),
                            Description = "Desciption-2",
                            IsCompleted = false,
                            Title = "Title-2"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1381),
                            Description = "Desciption-3",
                            IsCompleted = false,
                            Title = "Title-3"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1386),
                            Description = "Desciption-4",
                            IsCompleted = false,
                            Title = "Title-4"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1390),
                            Description = "Desciption-5",
                            IsCompleted = false,
                            Title = "Title-5"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1393),
                            Description = "Desciption-6",
                            IsCompleted = false,
                            Title = "Title-6"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1397),
                            Description = "Desciption-7",
                            IsCompleted = false,
                            Title = "Title-7"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1401),
                            Description = "Desciption-8",
                            IsCompleted = false,
                            Title = "Title-8"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1404),
                            Description = "Desciption-9",
                            IsCompleted = false,
                            Title = "Title-9"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1408),
                            Description = "Desciption-10",
                            IsCompleted = false,
                            Title = "Title-10"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 4,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1412),
                            Description = "Desciption-11",
                            IsCompleted = false,
                            Title = "Title-11"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1415),
                            Description = "Desciption-12",
                            IsCompleted = false,
                            Title = "Title-12"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1419),
                            Description = "Desciption-13",
                            IsCompleted = false,
                            Title = "Title-13"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1422),
                            Description = "Desciption-14",
                            IsCompleted = false,
                            Title = "Title-14"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 4,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1426),
                            Description = "Desciption-15",
                            IsCompleted = false,
                            Title = "Title-15"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1429),
                            Description = "Desciption-16",
                            IsCompleted = false,
                            Title = "Title-16"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1433),
                            Description = "Desciption-17",
                            IsCompleted = false,
                            Title = "Title-17"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 3,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1436),
                            Description = "Desciption-18",
                            IsCompleted = false,
                            Title = "Title-18"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 4,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1440),
                            Description = "Desciption-19",
                            IsCompleted = false,
                            Title = "Title-19"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2019, 10, 26, 5, 19, 50, 485, DateTimeKind.Local).AddTicks(1443),
                            Description = "Desciption-20",
                            IsCompleted = false,
                            Title = "Title-20"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.TodoTag", b =>
                {
                    b.Property<int>("TodoId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("TodoId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("TodoTags");
                });

            modelBuilder.Entity("WebApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Admin",
                            IsAdmin = true,
                            IsBlocked = false,
                            LastName = "System",
                            PasswordHash = new byte[] { 83, 97, 44, 201, 241, 5, 130, 46, 188, 209, 253, 16, 53, 237, 15, 51, 127, 96, 165, 56, 164, 58, 126, 240, 172, 130, 8, 165, 231, 158, 69, 18, 18, 232, 166, 235, 246, 144, 26, 147, 12, 151, 168, 34, 69, 117, 205, 63, 113, 90, 39, 227, 191, 121, 193, 249, 220, 146, 52, 37, 31, 85, 150, 98 },
                            PasswordSalt = new byte[] { 215, 196, 207, 187, 231, 194, 23, 205, 213, 36, 78, 157, 46, 118, 174, 92, 63, 46, 189, 234, 237, 51, 129, 108, 206, 164, 49, 42, 115, 77, 134, 16, 221, 92, 61, 249, 152, 42, 194, 169, 208, 245, 63, 199, 80, 221, 174, 4, 24, 108, 217, 167, 0, 172, 62, 252, 2, 98, 103, 192, 68, 105, 219, 240, 241, 201, 177, 26, 236, 124, 115, 158, 165, 120, 65, 28, 85, 155, 57, 26, 53, 104, 153, 10, 108, 9, 199, 186, 196, 69, 156, 155, 158, 35, 118, 6, 38, 235, 253, 127, 208, 250, 103, 225, 33, 197, 16, 241, 71, 67, 68, 145, 247, 247, 239, 244, 197, 126, 69, 54, 164, 98, 130, 164, 94, 55, 176, 67 },
                            Username = "Admin"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Todo", b =>
                {
                    b.HasOne("WebApi.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.User", "User")
                        .WithMany("Todos")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.Entities.TodoTag", b =>
                {
                    b.HasOne("WebApi.Entities.Tag", "Tag")
                        .WithMany("TodoTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.Todo", "Todo")
                        .WithMany("TodoTags")
                        .HasForeignKey("TodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
